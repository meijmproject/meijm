/**
 * @desctiption   This file is generated by  code generation tool version 0.2 ^_^
 * @Created   2017-02-10
**/
package com.yh.hr.res.pb.service.impl;

import java.util.List;

import com.yh.component.taglib.TableTagBean;
import com.yh.hr.res.dictionary.DicConstants;
import com.yh.hr.res.pb.bo.PbQualificationsInfo;
import com.yh.hr.res.pb.dto.PbQualificationsInfoDTO;
import com.yh.hr.res.pb.queryhelper.PbQualificationsInfoQueryHelper;
import com.yh.hr.res.pb.service.PbQualificationsInfoService;
import com.yh.platform.core.dao.DaoUtil;
import com.yh.platform.core.exception.ServiceException;
import com.yh.platform.core.util.BeanHelper;

public class PbQualificationsInfoServiceImpl implements PbQualificationsInfoService {
	public void create(PbQualificationsInfoDTO pbQualificationsInfoDto) throws ServiceException {
		PbQualificationsInfo pbQualificationsInfo = new PbQualificationsInfo();
		BeanHelper.copyProperties(pbQualificationsInfoDto, pbQualificationsInfo);
        pbQualificationsInfo.save();
        if(DicConstants.YHRS0003_1.equals(pbQualificationsInfo.getIsHighestLevel()))
        {
        	//同步执业资格信息到附属信息表
            PersonAttachInfoServiceUtil.sysPbQualificationsInfo(pbQualificationsInfo.getPersonOid());	
        }
        
	}

	public PbQualificationsInfoDTO get(java.lang.Long pbQualificationsInfoId) throws ServiceException {
        return BeanHelper.copyProperties(DaoUtil.get(PbQualificationsInfo.class, pbQualificationsInfoId),PbQualificationsInfoDTO.class);
	}
    
	public void update(PbQualificationsInfoDTO pbQualificationsInfoDto) throws ServiceException {

		PbQualificationsInfo pbQualificationsInfo = new PbQualificationsInfo();
		BeanHelper.copyProperties(pbQualificationsInfoDto, pbQualificationsInfo);
		pbQualificationsInfo.update();
    	//同步执业资格信息到附属信息表
        PersonAttachInfoServiceUtil.sysPbQualificationsInfo(pbQualificationsInfo.getPersonOid());	
	}
    
	public void delete(java.lang.Long pbQualificationsInfoId) throws ServiceException {
		PbQualificationsInfo bo = DaoUtil.get(PbQualificationsInfo.class, pbQualificationsInfoId);
        Long personOid = bo.getPersonOid();
		bo.delete();
		//同步执业资格信息到附属信息表
        PersonAttachInfoServiceUtil.sysPbQualificationsInfo(personOid);	
	}
    
	public List<PbQualificationsInfoDTO> find(TableTagBean ttb) throws ServiceException {
        return PbQualificationsInfoQueryHelper.find(ttb);
	}
    
    /**
	 * 根据人员id查询执业（职业）资格信息
	 * @param longValue
	 * @return ServiceException
	 */
	public List<PbQualificationsInfoDTO> listQualificationsInfoByPersonOid(Long personOid) throws ServiceException {
		return PbQualificationsInfoQueryHelper.listQualificationsInfoByPersonOid(personOid);
	}

	public void deleteByPersonOid(Long personOid) throws ServiceException {
		PbQualificationsInfoQueryHelper.deleteByPersonOid(personOid);
	}
}