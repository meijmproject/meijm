/**
 * @desctiption   This file is generated by  code generation tool version 0.2 ^_^
 * @Created   2017-02-13
**/
package com.yh.hr.res.pb.service.impl;

import com.yh.hr.res.pb.queryhelper.PbResumeInfoQueryHelper;
import com.yh.hr.res.pb.bo.PbResumeInfo;
import com.yh.hr.res.pb.dto.PbResumeInfoDTO;
import com.yh.hr.res.pb.service.PbResumeInfoService;
import jade.workflow.utils.ObjectUtil;

import java.util.HashMap;
import java.util.List;

import com.yh.component.taglib.TableTagBean;
import com.yh.platform.core.dao.DaoUtil;
import com.yh.platform.core.exception.ServiceException;
import com.yh.platform.core.util.BeanHelper;
import com.yh.platform.core.util.DateUtil;
import com.yh.platform.core.util.StringMap;
import com.yh.platform.core.web.UserContext;

public class PbResumeInfoServiceImpl implements PbResumeInfoService {
	public void create(PbResumeInfoDTO pbResumeInfoDto) throws ServiceException {
		PbResumeInfo pbResumeInfo = new PbResumeInfo();
		BeanHelper.copyProperties(pbResumeInfoDto, pbResumeInfo);
		pbResumeInfo.setCreateBy(UserContext.getLoginUserID());
		pbResumeInfo.setCreateName(UserContext.getLoginUserName());
		pbResumeInfo.setCreateDate(DateUtil.now());
        pbResumeInfo.save();
	}

	public PbResumeInfoDTO get(java.lang.Long pbResumeInfoId) throws ServiceException {
        return BeanHelper.copyProperties(DaoUtil.get(PbResumeInfo.class, pbResumeInfoId),PbResumeInfoDTO.class);
	}
    
	public void update(PbResumeInfoDTO pbResumeInfoDto) throws ServiceException {
		PbResumeInfo pbResumeInfo = DaoUtil.get(PbResumeInfo.class, pbResumeInfoDto.getResumeOid());
		BeanHelper.copyProperties(pbResumeInfoDto, pbResumeInfo, BeanHelper.getNullPropertyNames(pbResumeInfoDto));
		pbResumeInfo.setUpdateBy(UserContext.getLoginUserID());
		pbResumeInfo.setUpdateName(UserContext.getLoginUserName());
		pbResumeInfo.setUpdateDate(DateUtil.now());
		pbResumeInfo.update();
	}
    
	public void delete(java.lang.Long pbResumeInfoId) throws ServiceException {
      DaoUtil.get(PbResumeInfo.class, pbResumeInfoId).delete();
	}
    
	public List<PbResumeInfoDTO> find(TableTagBean ttb) throws ServiceException {
        StringBuilder hql = new StringBuilder();
        HashMap<String, Object> hqlParams = new HashMap<String, Object>();
        buildHQL(ttb.getCondition(), hql, hqlParams);
        String order = ttb.getOrderBy();
        if (order != null) {
            if (ttb.getAsc()) {
                hql.append(" order by " + order + " asc");
            } else {
                hql.append(" order by " + order + " desc");
            }
        }
        List<PbResumeInfoDTO> list = BeanHelper.copyProperties(DaoUtil.listByCondition(hql.toString(), hqlParams, ttb.getPage() * ttb.getPageSize(), ttb.getPageSize()),PbResumeInfoDTO.class);
        ttb.setList(list);
        ttb.setTotal(DaoUtil.countByCondition("select count(*) "+hql, hqlParams));
        return list;
	}

    public void buildHQL(StringMap params, StringBuilder hql, HashMap<String, Object> hqlParams) throws ServiceException {
        hql.append("from PbResumeInfo where 1=1");
        String personOid = params.getAsStringEmptyNull("personOid");
        if (personOid != null){
           	hql.append(" and personOid = :personOid");
           	try{
           		hqlParams.put("personOid", ObjectUtil.getValue(personOid, java.lang.Long.class));
        	} catch (jade.workflow.exception.ServiceException e) {
			e.printStackTrace();
			}
        }
        String startDate = params.getAsStringEmptyNull("startDateStr");
        if (startDate != null){
            hql.append(" and startDate = :startDate");
            hqlParams.put("startDate", DateUtil.parseDate(startDate));
        }
        String endDate = params.getAsStringEmptyNull("endDateStr");
        if (endDate != null){
            hql.append(" and endDate = :endDate");
            hqlParams.put("endDate", DateUtil.parseDate(endDate));
        }
        String unit = params.getAsStringEmptyNull("unit");
        if (unit != null){
           hql.append(" and unit like :unit");
           hqlParams.put("unit", "%"+unit.trim()+"%");
        }
   }

    /**
     * �����Աid��ѯ����PbResumeInfo��Ϣ
     * @param
     * @throws ServiceException
     */
    public List<PbResumeInfoDTO> listPbResumeInfoByPersonOid(Long personOid) throws ServiceException{
        return PbResumeInfoQueryHelper.listPbResumeInfoByPersonOid(personOid);
    }

}