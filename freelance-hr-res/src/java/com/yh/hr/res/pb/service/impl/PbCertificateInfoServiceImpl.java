/**
 * @desctiption   This file is generated by  code generation tool version 0.2 ^_^
 * @Created   2017-02-10
**/
package com.yh.hr.res.pb.service.impl;

import com.yh.hr.res.pb.queryhelper.PbCertificateInfoQueryHelper;
import jade.workflow.utils.ObjectUtil;

import java.util.HashMap;
import java.util.List;

import com.yh.component.taglib.TableTagBean;
import com.yh.hr.res.pb.bo.PbCertificateInfo;
import com.yh.hr.res.pb.dto.PbCertificateInfoDTO;
import com.yh.hr.res.pb.service.PbCertificateInfoService;
import com.yh.platform.core.dao.DaoUtil;
import com.yh.platform.core.exception.ServiceException;
import com.yh.platform.core.util.BeanHelper;
import com.yh.platform.core.util.DateUtil;
import com.yh.platform.core.util.StringMap;
import com.yh.platform.core.web.UserContext;

public class PbCertificateInfoServiceImpl implements PbCertificateInfoService{
	public void create(PbCertificateInfoDTO pbCertificateInfoDto) throws ServiceException {
		PbCertificateInfo pbCertificateInfo = new PbCertificateInfo();
		BeanHelper.copyProperties(pbCertificateInfoDto, pbCertificateInfo);
		pbCertificateInfo.setCreateBy(UserContext.getLoginUserID());
		pbCertificateInfo.setCreateName(UserContext.getLoginUserName());
		pbCertificateInfo.setCreateDate(DateUtil.now());
        pbCertificateInfo.save();
	}

	public PbCertificateInfoDTO get(java.lang.Long pbCertificateInfoId) throws ServiceException {
        return BeanHelper.copyProperties(DaoUtil.get(PbCertificateInfo.class, pbCertificateInfoId),PbCertificateInfoDTO.class);
	}
    
	public void update(PbCertificateInfoDTO pbCertificateInfoDto) throws ServiceException {
		PbCertificateInfo pbCertificateInfo = DaoUtil.get(PbCertificateInfo.class, pbCertificateInfoDto.getCertificateOid());
		BeanHelper.copyProperties(pbCertificateInfoDto, pbCertificateInfo, BeanHelper.getNullPropertyNames(pbCertificateInfoDto));
		pbCertificateInfo.setUpdateBy(UserContext.getLoginUserID());
		pbCertificateInfo.setUpdateName(UserContext.getLoginUserName());
		pbCertificateInfo.setUpdateDate(DateUtil.now());
		pbCertificateInfo.update();
	}
    
	public void delete(java.lang.Long pbCertificateInfoId) throws ServiceException {
      DaoUtil.get(PbCertificateInfo.class, pbCertificateInfoId).delete();
	}
    
	public List<PbCertificateInfoDTO> find(TableTagBean ttb) throws ServiceException {
        StringBuilder hql = new StringBuilder();
        HashMap<String, Object> hqlParams = new HashMap<String, Object>();
        buildHQL(ttb.getCondition(), hql, hqlParams);
        String order = ttb.getOrderBy();
        if (order != null) {
            if (ttb.getAsc()) {
                hql.append(" order by " + order + " asc");
            } else {
                hql.append(" order by " + order + " desc");
            }
        }
        List<PbCertificateInfoDTO> list = BeanHelper.copyProperties(DaoUtil.listByCondition(hql.toString(), hqlParams, ttb.getPage() * ttb.getPageSize(), ttb.getPageSize()),PbCertificateInfoDTO.class);
        ttb.setList(list);
        ttb.setTotal(DaoUtil.countByCondition("select count(*) "+hql, hqlParams));
        return list;
	}

    public void buildHQL(StringMap params, StringBuilder hql, HashMap<String, Object> hqlParams) throws ServiceException {
        hql.append("from PbCertificateInfo where 1=1");
        String personOid = params.getAsStringEmptyNull("personOid");
        if (personOid != null){
           	hql.append(" and personOid = :personOid");
           	try{
           		hqlParams.put("personOid", ObjectUtil.getValue(personOid, java.lang.Long.class));
        	} catch (jade.workflow.exception.ServiceException e) {
			e.printStackTrace();
			}
        }
        String certificateNo = params.getAsStringEmptyNull("certificateNo");
        if (certificateNo != null){
           hql.append(" and certificateNo like :certificateNo");
           hqlParams.put("certificateNo", "%"+certificateNo.trim()+"%");
        }
        String approveOrganName = params.getAsStringEmptyNull("approveOrganName");
        if (approveOrganName != null){
           hql.append(" and approveOrganName like :approveOrganName");
           hqlParams.put("approveOrganName", "%"+approveOrganName.trim()+"%");
        }
        String approvedDate = params.getAsStringEmptyNull("approvedDateStr");
        if (approvedDate != null){
            hql.append(" and approvedDate = :approvedDate");
            hqlParams.put("approvedDate", DateUtil.parseDate(approvedDate));
        }
   }
    /*
     * (non-Javadoc)
     * @see PbCertificateInfoService#getCertificateInfoByCertificateNo(java.lang.Long, java.lang.String)
     */
	public PbCertificateInfoDTO getCertificateInfoByCertificateNo(Long personOid,String certificateInfoNo)
			throws ServiceException {
		
		return PbCertificateInfoQueryHelper.getCertificateInfoByCertificateNo(personOid, certificateInfoNo);
	}

	/* (non-Javadoc)
	 * @see PbCertificateInfoService#getCertificateInfoById(java.lang.Long)
	 */
	public List<PbCertificateInfoDTO> getCertificateInfoById(Long personOid)
			throws ServiceException {
		return PbCertificateInfoQueryHelper.getCertificateInfoById(personOid);
	}

	public void deleteByPersonOid(Long personOid) throws ServiceException {
		PbCertificateInfoQueryHelper.deleteByPersonOid(personOid);
	}
}