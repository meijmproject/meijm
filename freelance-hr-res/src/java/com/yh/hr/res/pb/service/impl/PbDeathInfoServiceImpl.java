/**
 * @desctiption   This file is generated by  code generation tool version 0.2 ^_^
 * @Created   2017-02-13
**/
package com.yh.hr.res.pb.service.impl;

import com.yh.hr.res.pb.dto.PbDeathInfoDTO;
import com.yh.hr.res.pb.queryhelper.PbDeathInfoQueryHelper;
import jade.workflow.utils.ObjectUtil;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.beans.BeanUtils;

import com.yh.component.taglib.TableTagBean;
import com.yh.hr.res.pb.bo.PbDeathInfo;
import com.yh.hr.res.pb.service.PbDeathInfoService;
import com.yh.platform.core.dao.DaoUtil;
import com.yh.platform.core.exception.ServiceException;
import com.yh.platform.core.util.BeanHelper;
import com.yh.platform.core.util.DateUtil;
import com.yh.platform.core.util.StringMap;
import com.yh.platform.core.web.UserContext;

public class PbDeathInfoServiceImpl implements PbDeathInfoService{
	public void create(PbDeathInfoDTO pbDeathInfoDto) throws ServiceException {
		PbDeathInfo pbDeathInfo = new PbDeathInfo();
		BeanHelper.copyProperties(pbDeathInfoDto, pbDeathInfo);
		pbDeathInfo.setCreateBy(UserContext.getLoginUserID());
		pbDeathInfo.setCreateName(UserContext.getLoginUserName());
		pbDeathInfo.setCreateDate(DateUtil.now());
        pbDeathInfo.save();
        PersonAttachInfoServiceUtil.sysPbDeathInfo(pbDeathInfoDto.getPersonOid());
	}

	public PbDeathInfoDTO get(java.lang.Long pbDeathInfoId) throws ServiceException {
        return BeanHelper.copyProperties(DaoUtil.get(PbDeathInfo.class, pbDeathInfoId),PbDeathInfoDTO.class);
	}
    
	public void update(PbDeathInfoDTO pbDeathInfoDto) throws ServiceException {
		PbDeathInfo pbDeathInfo = DaoUtil.get(PbDeathInfo.class, pbDeathInfoDto.getPersonOid());
		BeanHelper.copyProperties(pbDeathInfoDto, pbDeathInfo, BeanHelper.getNullPropertyNames(pbDeathInfoDto));
		pbDeathInfo.setUpdateBy(UserContext.getLoginUserID());
		pbDeathInfo.setUpdateName(UserContext.getLoginUserName());
		pbDeathInfo.setUpdateDate(DateUtil.now());
		pbDeathInfo.update();
		PersonAttachInfoServiceUtil.sysPbDeathInfo(pbDeathInfoDto.getPersonOid());
	}
    
	public void delete(java.lang.Long pbDeathInfoId) throws ServiceException {
      PbDeathInfo bo = DaoUtil.get(PbDeathInfo.class, pbDeathInfoId);
	  if(null != bo)
	  {
		  bo.delete();
	      PersonAttachInfoServiceUtil.sysPbDeathInfo(bo.getPersonOid());
	  }
	}
    
	public List<PbDeathInfoDTO> find(TableTagBean ttb) throws ServiceException {
        StringBuilder hql = new StringBuilder();
        HashMap<String, Object> hqlParams = new HashMap<String, Object>();
        buildHQL(ttb.getCondition(), hql, hqlParams);
        String order = ttb.getOrderBy();
        if (order != null) {
            if (ttb.getAsc()) {
                hql.append(" order by " + order + " asc");
            } else {
                hql.append(" order by " + order + " desc");
            }
        }
        List<PbDeathInfoDTO> list = BeanHelper.copyProperties(DaoUtil.listByCondition(hql.toString(), hqlParams, ttb.getPage() * ttb.getPageSize(), ttb.getPageSize()),PbDeathInfoDTO.class);
        ttb.setList(list);
        ttb.setTotal(DaoUtil.countByCondition("select count(*) "+hql, hqlParams));
        return list;
	}

    public void buildHQL(StringMap params, StringBuilder hql, HashMap<String, Object> hqlParams) throws ServiceException {
        hql.append("from PbDeathInfo where 1=1");
        String personOid = params.getAsStringEmptyNull("personOid");
        if (personOid != null){
           	hql.append(" and personOid = :personOid");
           	try{
           		hqlParams.put("personOid", ObjectUtil.getValue(personOid, java.lang.Long.class));
        	} catch (jade.workflow.exception.ServiceException e) {
			e.printStackTrace();
			}
        }
        String deathDate = params.getAsStringEmptyNull("deathDateStr");
        if (deathDate != null){
            hql.append(" and deathDate = :deathDate");
            hqlParams.put("deathDate", DateUtil.parseDate(deathDate));
        }
        String deathType = params.getAsStringEmptyNull("deathType");
        if (deathType != null){
           hql.append(" and deathType like :deathType");
           hqlParams.put("deathType", "%"+deathType.trim()+"%");
        }
        String deathReason = params.getAsStringEmptyNull("deathReason");
        if (deathReason != null){
           hql.append(" and deathReason like :deathReason");
           hqlParams.put("deathReason", "%"+deathReason.trim()+"%");
        }
        String smartMoney = params.getAsStringEmptyNull("smartMoney");
        if (smartMoney != null){
            hql.append(" and smartMoney = :smartMoney");
            try{
            	hqlParams.put("smartMoney", ObjectUtil.getValue(smartMoney, java.lang.Float.class));
        	} catch (jade.workflow.exception.ServiceException e) {
			e.printStackTrace();
			}
        }
   }

    /*
     * (non-Javadoc)
     * @see PbDeathInfoService#findByPersonOid(java.lang.Long)
     */
	public PbDeathInfoDTO findByPersonOid(Long personOid)
			throws ServiceException 
	{
		List<PbDeathInfo> list = PbDeathInfoQueryHelper.findByPersonOid(personOid);
		if(CollectionUtils.isNotEmpty(list))
		{
			PbDeathInfo bo = list.get(0);
			PbDeathInfoDTO dto = new PbDeathInfoDTO();
			BeanUtils.copyProperties(bo, dto);
			return dto;
		}
		return null;
	}
	
	
	/**
	 * 根据人员id查询该人员所有的自然减员记录
	 * @param personOid
	 * @return
	 * @throws ServiceException
	 */
	public List<PbDeathInfoDTO> listPbDeathInfoByPersonOid(Long personOid) throws ServiceException{
		List<PbDeathInfoDTO> listDTO = new ArrayList<PbDeathInfoDTO>();
		List<PbDeathInfo> list = PbDeathInfoQueryHelper.findByPersonOid(personOid);
		if(CollectionUtils.isNotEmpty(list))
		{
			listDTO = BeanHelper.copyProperties(list, PbDeathInfoDTO.class);
		}
		return listDTO;
	}

	public void deleteByPersonOid(Long personOid) throws ServiceException {
		DaoUtil.executeUpdate("delete from PbDeathInfo where personOid='"+personOid+"'");
	}
}