/**
 * @desctiption   This file is generated by  code generation tool version 0.2 ^_^
 * @Created   2017-02-13
**/
package com.yh.hr.res.pb.service.impl;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import com.yh.hr.res.pb.queryhelper.PbRewardInfoQueryHelper;
import com.yh.hr.res.pb.service.PbRewardInfoService;
import org.springframework.util.CollectionUtils;

import com.yh.hr.res.pb.bo.PbRewardInfo;
import com.yh.hr.res.pb.dto.PbRewardInfoDTO;
import com.yh.component.taglib.TableTagBean;
import com.yh.platform.core.dao.DaoUtil;
import com.yh.platform.core.util.BeanHelper;
import com.yh.platform.core.exception.ServiceException;

public class PbRewardInfoServiceImpl implements PbRewardInfoService {
	public void create(PbRewardInfoDTO pbRewardInfoDto) throws ServiceException {
		PbRewardInfo pbRewardInfo = new PbRewardInfo();
		BeanHelper.copyProperties(pbRewardInfoDto, pbRewardInfo);
        pbRewardInfo.save();
	}

	public PbRewardInfoDTO get(java.lang.Long pbRewardInfoId) throws ServiceException {
        return BeanHelper.copyProperties(DaoUtil.get(PbRewardInfo.class, pbRewardInfoId),PbRewardInfoDTO.class);
	}
    
	public void update(PbRewardInfoDTO pbRewardInfoDto) throws ServiceException {

		PbRewardInfo pbRewardInfo = new PbRewardInfo();
		BeanHelper.copyProperties(pbRewardInfoDto, pbRewardInfo);
		pbRewardInfo.update();
	}
    
	public void delete(java.lang.Long pbRewardInfoId) throws ServiceException {
      DaoUtil.get(PbRewardInfo.class, pbRewardInfoId).delete();
	}
    
	public List<PbRewardInfoDTO> find(TableTagBean ttb) throws ServiceException {
        StringBuilder hql = new StringBuilder();
        HashMap<String, Object> hqlParams = new HashMap<String, Object>();
        PbRewardInfoQueryHelper.buildHQL(ttb.getCondition(), hql, hqlParams);
        String order = ttb.getOrderBy();
        if (order != null) {
            if (ttb.getAsc()) {
                hql.append(" order by " + order + " asc");
            } else {
                hql.append(" order by " + order + " desc");
            }
        }
        List<PbRewardInfoDTO> list = new ArrayList<PbRewardInfoDTO>();
        List<PbRewardInfo> boList = DaoUtil.listByCondition(hql.toString(), hqlParams, ttb.getPage() * ttb.getPageSize(), ttb.getPageSize());
		if(!CollectionUtils.isEmpty(boList))
		{
			for(PbRewardInfo bo : boList)
			{
				PbRewardInfoDTO dto = new PbRewardInfoDTO();
				BeanHelper.copyProperties(bo, dto);
				list.add(dto);
			}
		}
        ttb.setList(list);
        ttb.setTotal(DaoUtil.countByCondition("select count(*) "+hql, hqlParams));
        return list;
	}

	public List<PbRewardInfoDTO> getRewardInfoByPersonOid(Long personOid)
			throws ServiceException {
		return PbRewardInfoQueryHelper.getRewardInfoByPersonOid(personOid);
	}

 
}