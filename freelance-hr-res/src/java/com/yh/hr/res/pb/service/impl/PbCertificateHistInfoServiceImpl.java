/**
 * @desctiption   This file is generated by  code generation tool version 0.2 ^_^
 * @Created   2017-02-10
**/
package com.yh.hr.res.pb.service.impl;

import com.yh.hr.res.pb.bo.PbCertificateHistInfo;
import com.yh.hr.res.pb.dto.PbCertificateHistInfoDTO;
import com.yh.hr.res.pb.queryhelper.PbCertificateHistInfoQueryHelper;
import com.yh.hr.res.pb.service.PbCertificateHistInfoService;
import jade.workflow.utils.DateUtil;
import jade.workflow.utils.ObjectUtil;

import java.util.HashMap;
import java.util.List;

import com.yh.component.taglib.TableTagBean;
import com.yh.platform.core.dao.DaoUtil;
import com.yh.platform.core.exception.ServiceException;
import com.yh.platform.core.util.BeanHelper;
import com.yh.platform.core.util.StringMap;
import com.yh.platform.core.web.UserContext;

public class PbCertificateHistInfoServiceImpl implements PbCertificateHistInfoService {
	public void create(PbCertificateHistInfoDTO pbCertificateHistInfoDto) throws ServiceException {
		PbCertificateHistInfo pbCertificateHistInfo = new PbCertificateHistInfo();
		BeanHelper.copyProperties(pbCertificateHistInfoDto, pbCertificateHistInfo);
		pbCertificateHistInfo.setCreateBy(UserContext.getLoginUserID());
		pbCertificateHistInfo.setCreateName(UserContext.getLoginUserName());
		pbCertificateHistInfo.setCreateDate(DateUtil.now());
        pbCertificateHistInfo.save();
	}

	public PbCertificateHistInfoDTO get(java.lang.Long pbCertificateHistInfoId) throws ServiceException {
        return BeanHelper.copyProperties(DaoUtil.get(PbCertificateHistInfo.class, pbCertificateHistInfoId),PbCertificateHistInfoDTO.class);
	}
    
	public void update(PbCertificateHistInfoDTO pbCertificateHistInfoDto) throws ServiceException {
		PbCertificateHistInfo pbCertificateHistInfo = DaoUtil.get(PbCertificateHistInfo.class, pbCertificateHistInfoDto.getCertificateHistOid());
		BeanHelper.copyProperties(pbCertificateHistInfoDto, pbCertificateHistInfo, BeanHelper.getNullPropertyNames(pbCertificateHistInfoDto));
		pbCertificateHistInfo.setUpdateBy(UserContext.getLoginUserID());
		pbCertificateHistInfo.setUpdateName(UserContext.getLoginUserName());
		pbCertificateHistInfo.setUpdateDate(DateUtil.now());
		pbCertificateHistInfo.update();
	}
    
	public void delete(java.lang.Long pbCertificateHistInfoId) throws ServiceException {
      DaoUtil.get(PbCertificateHistInfo.class, pbCertificateHistInfoId).delete();
	}
    
	public List<PbCertificateHistInfoDTO> find(TableTagBean ttb) throws ServiceException {
        StringBuilder hql = new StringBuilder();
        HashMap<String, Object> hqlParams = new HashMap<String, Object>();
        buildHQL(ttb.getCondition(), hql, hqlParams);
        String order = ttb.getOrderBy();
        if (order != null) {
            if (ttb.getAsc()) {
                hql.append(" order by " + order + " asc");
            } else {
                hql.append(" order by " + order + " desc");
            }
        }
        List<PbCertificateHistInfoDTO> list = BeanHelper.copyProperties(DaoUtil.listByCondition(hql.toString(), hqlParams, ttb.getPage() * ttb.getPageSize(), ttb.getPageSize()),PbCertificateHistInfoDTO.class);
        ttb.setList(list);
        ttb.setTotal(DaoUtil.countByCondition("select count(*) "+hql, hqlParams));
        return list;
	}

    public void buildHQL(StringMap params, StringBuilder hql, HashMap<String, Object> hqlParams) throws ServiceException {
        hql.append("from PbCertificateHistInfo where 1=1");
        String personOid = params.getAsStringEmptyNull("personOid");
        if (personOid != null){
           	hql.append(" and personOid = :personOid");
           	try{
           		hqlParams.put("personOid", ObjectUtil.getValue(personOid, java.lang.Long.class));
        	} catch (jade.workflow.exception.ServiceException e) {
			e.printStackTrace();
			}
        }
        String certificateType = params.getAsStringEmptyNull("certificateType");
        if (certificateType != null){
           hql.append(" and certificateType like :certificateType");
           hqlParams.put("certificateType", "%"+certificateType.trim()+"%");
        }
        String certificateBeginDate = params.getAsStringEmptyNull("certificateBeginDateStr");
        if (certificateBeginDate != null){
            hql.append(" and certificateBeginDate = :certificateBeginDate");
            hqlParams.put("certificateBeginDate", DateUtil.parseDate(certificateBeginDate));
        }
        String certificateEndDate = params.getAsStringEmptyNull("certificateEndDateStr");
        if (certificateEndDate != null){
            hql.append(" and certificateEndDate = :certificateEndDate");
            hqlParams.put("certificateEndDate", DateUtil.parseDate(certificateEndDate));
        }
   }

	public List<PbCertificateHistInfoDTO> getPbCertificateHistInfoById(
			Long personOid) throws ServiceException {
		return PbCertificateHistInfoQueryHelper.getCertificateHistInfoById(personOid);
	}
}