/**
 * @desctiption   This file is generated by  code generation tool version 0.2 ^_^
 * @Created   2017-02-13
**/
package com.yh.hr.res.pb.service.impl;

import com.yh.hr.res.pb.bo.PbInjuryInfo;
import com.yh.hr.res.pb.dto.PbInjuryInfoDTO;
import com.yh.hr.res.pb.queryhelper.PbInjuryInfoQueryHelper;
import jade.workflow.utils.ObjectUtil;

import java.util.HashMap;
import java.util.List;

import com.yh.component.taglib.TableTagBean;
import com.yh.hr.res.pb.service.PbInjuryInfoService;
import com.yh.platform.core.dao.DaoUtil;
import com.yh.platform.core.exception.ServiceException;
import com.yh.platform.core.util.BeanHelper;
import com.yh.platform.core.util.DateUtil;
import com.yh.platform.core.util.StringMap;
import com.yh.platform.core.web.UserContext;

public class PbInjuryInfoServiceImpl implements PbInjuryInfoService{
	public void create(PbInjuryInfoDTO pbInjuryInfoDto) throws ServiceException {
		PbInjuryInfo pbInjuryInfo = new PbInjuryInfo();
		BeanHelper.copyProperties(pbInjuryInfoDto, pbInjuryInfo);
		pbInjuryInfo.setCreateBy(UserContext.getLoginUserID());
		pbInjuryInfo.setCreateName(UserContext.getLoginUserName());
		pbInjuryInfo.setCreateDate(DateUtil.now());
        pbInjuryInfo.save();
	}

	public PbInjuryInfoDTO get(java.lang.Long pbInjuryInfoId) throws ServiceException {
        return BeanHelper.copyProperties(DaoUtil.get(PbInjuryInfo.class, pbInjuryInfoId),PbInjuryInfoDTO.class);
	}
    
	public void update(PbInjuryInfoDTO pbInjuryInfoDto) throws ServiceException {
		PbInjuryInfo pbInjuryInfo = DaoUtil.get(PbInjuryInfo.class, pbInjuryInfoDto.getInjuryOid());
		BeanHelper.copyProperties(pbInjuryInfoDto, pbInjuryInfo, BeanHelper.getNullPropertyNames(pbInjuryInfoDto));
		pbInjuryInfo.setUpdateBy(UserContext.getLoginUserID());
		pbInjuryInfo.setUpdateName(UserContext.getLoginUserName());
		pbInjuryInfo.setUpdateDate(DateUtil.now());
		pbInjuryInfo.update();
	}
    
	public void delete(java.lang.Long pbInjuryInfoId) throws ServiceException {
      DaoUtil.get(PbInjuryInfo.class, pbInjuryInfoId).delete();
	}
    
	public List<PbInjuryInfoDTO> find(TableTagBean ttb) throws ServiceException {
        StringBuilder hql = new StringBuilder();
        HashMap<String, Object> hqlParams = new HashMap<String, Object>();
        buildHQL(ttb.getCondition(), hql, hqlParams);
        String order = ttb.getOrderBy();
        if (order != null) {
            if (ttb.getAsc()) {
                hql.append(" order by " + order + " asc");
            } else {
                hql.append(" order by " + order + " desc");
            }
        }
        List<PbInjuryInfoDTO> list = BeanHelper.copyProperties(DaoUtil.listByCondition(hql.toString(), hqlParams, ttb.getPage() * ttb.getPageSize(), ttb.getPageSize()),PbInjuryInfoDTO.class);
        ttb.setList(list);
        ttb.setTotal(DaoUtil.countByCondition("select count(*) "+hql, hqlParams));
        return list;
	}

    public void buildHQL(StringMap params, StringBuilder hql, HashMap<String, Object> hqlParams) throws ServiceException {
        hql.append("from PbInjuryInfo where 1=1");
        String personOid = params.getAsStringEmptyNull("personOid");
        if (personOid != null){
           	hql.append(" and personOid = :personOid");
           	try{
           		hqlParams.put("personOid", ObjectUtil.getValue(personOid, java.lang.Long.class));
        	} catch (jade.workflow.exception.ServiceException e) {
			e.printStackTrace();
			}
        }
        String hurtDate = params.getAsStringEmptyNull("hurtDateStr");
        if (hurtDate != null){
            hql.append(" and hurtDate = :hurtDate");
            hqlParams.put("hurtDate", DateUtil.parseDate(hurtDate));
        }
        String hurtLevel = params.getAsStringEmptyNull("hurtLevel");
        if (hurtLevel != null){
           hql.append(" and hurtLevel like :hurtLevel");
           hqlParams.put("hurtLevel", "%"+hurtLevel.trim()+"%");
        }
        String congizanceLetter = params.getAsStringEmptyNull("congizanceLetter");
        if (congizanceLetter != null){
           hql.append(" and congizanceLetter like :congizanceLetter");
           hqlParams.put("congizanceLetter", "%"+congizanceLetter.trim()+"%");
        }
   }

	public List<PbInjuryInfoDTO> getInjuryInfoByPersonOid(Long personOid)
			throws ServiceException {
		return PbInjuryInfoQueryHelper.getInjuryInfoByPersonOid(personOid);
	}
}